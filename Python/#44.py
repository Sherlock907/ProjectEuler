"""
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:
1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.
Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal
and D = |Pk − Pj| is minimised; what is the value of D?
"""
from time import perf_counter as _p
import numpy

def isPent(n):
    # formular off wiki
    if n > 0 and (1 + (1 + (24 * n))**0.5) % 6 == 0:
        return True
    return False

def letsgo():
    P = 2500
    a = numpy.ones(P, dtype=int)
    n = 1
    while n < P:
        a[n] = n * (3 * n - 1) / 2
        n += 1
    for i in a:
        for x in a[a>i]:
            tempsum = i+x
            tempdif = x-i
            if isPent(tempsum) and isPent(tempdif):
                print("Result: ", tempdif, tempsum, tempsum - tempdif)
                return


if __name__ == "__main__":
    start = _p()
    letsgo()
    print(round(_p()-start,2), "s")